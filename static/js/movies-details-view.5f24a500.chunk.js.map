{"version":3,"sources":["Components/MovieDetailsBlock/MovieDetailsBlock.module.css","Components/Cast/Cast.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/MovieDetailsBlock/MovieDetailsBlock.js","Components/Cast/Cast.js","Components/Reviews/Reviews.js","views/MovieDetailsPageView.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MovieDetailsBlock","imageUrl","movieTitle","vote_average","overview","genres","className","styles","mainBlock","src","alt","posterMovie","descriptionBlock","map","id","name","Cast","state","actors","a","movieId","this","props","match","params","moviesApi","fetchCast","responce","setState","data","cast","castList","profile_path","CastPhoto","Component","Reviews","reviews","fetchReviews","results","author","content","MovieDetailsPageView","title","poster_path","handleGoBack","history","location","from","routes","movies","fetchMovieDetails","fetchDetails","url","type","onClick","to","pathname","path","render"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,YAAc,uCAAuC,UAAY,qCAAqC,iBAAmB,8C,mBCA3ID,EAAOC,QAAU,CAAC,UAAY,wBAAwB,SAAW,yB,4DCDlD,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,wGCUMQ,EAvCW,SAAC,GAMpB,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,OAEA,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,gCACG,IACa,KAAbP,GACC,qBACEQ,IAAG,yCAAoCR,GACvCS,IAAI,GACJJ,UAAWC,IAAOI,iBAIxB,sBAAKL,UAAWC,IAAOK,iBAAvB,UACE,gCACE,6BAAKV,IACL,+CAAkBC,QAEpB,gCACE,0CACA,4BAAIC,OAEN,gCACE,0CACCC,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,4BAAaA,GAALD,gB,iBCSLE,E,4MArCbC,MAAQ,CACNC,OAAQ,I,8FAEV,8BAAAC,EAAA,6DACUC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QADV,SAEyBK,IAAUC,UAAUN,GAF7C,OAEQO,EAFR,OAIEN,KAAKO,SAAS,CAAEV,OAAQS,EAASE,KAAKC,OAJxC,gD,0EAOA,WAAU,IACAZ,EAAWG,KAAKJ,MAAhBC,OACR,OACE,mCACGA,EAAOvB,OAAS,EACf,oBAAIW,UAAWC,IAAOwB,SAAtB,SACGb,EAAOL,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,aAAb,OACV,+BACE,4BAAIjB,IACHiB,EACC,qBACE1B,UAAWC,IAAO0B,UAClBxB,IAAG,yCAAoCuB,GACvCtB,IAAKK,IAEL,OARGD,QAab,yE,GA/BSoB,aC+BJC,E,4MAhCblB,MAAQ,CACNmB,QAAS,I,8FAGX,8BAAAjB,EAAA,6DACUC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QADV,SAEyBK,IAAUY,aAAajB,GAFhD,OAEQO,EAFR,OAIEN,KAAKO,SAAS,CAAEQ,QAAST,EAASE,KAAKS,UAJzC,gD,0EAOA,WAAU,IACAF,EAAYf,KAAKJ,MAAjBmB,QACR,OACE,mCACGA,EAAQzC,OAAS,EAChB,6BACGyC,EAAQvB,KAAI,gBAAGC,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,+BACE,0CAAaD,KACb,4BAAIC,MAFG1B,QAOb,gF,GA1BYoB,aCOhBO,E,4MACJxB,MAAQ,CACNyB,MAAO,KACPvC,aAAc,KACdC,SAAU,KACVC,OAAQ,GACRS,GAAI,KACJ6B,YAAa,I,EAcfC,aAAe,WAAO,IAAD,EACW,EAAKtB,MAA3BuB,EADW,EACXA,QAASC,EADE,EACFA,SACjB,GAAIA,EAAS7B,OAAS6B,EAAS7B,MAAM8B,KACnC,OAAOF,EAAQxD,KAAKyD,EAAS7B,MAAM8B,MAErCF,EAAQxD,KAAK2D,IAAOC,S,uDAhBtB,WACE5B,KAAK6B,sB,sEAGP,8BAAA/B,EAAA,6DACUC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QADV,SAEyBK,IAAU0B,aAAa/B,GAFhD,OAEQO,EAFR,OAIEN,KAAKO,SAAL,KAAmBD,EAASE,OAJ9B,gD,0EAeA,WAAU,IAAD,EACwDR,KAAKJ,MAA5DyB,EADD,EACCA,MAAOvC,EADR,EACQA,aAAcC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,OAAQsC,EADxC,EACwCA,YACvCS,EAAQ/B,KAAKC,MAAMC,MAAnB6B,IACAN,EAAazB,KAAKC,MAAlBwB,SAER,OACE,qCACE,wBAAQxC,UAAU,YAAY+C,KAAK,SAASC,QAASjC,KAAKuB,aAA1D,qBAGA,cAAC,EAAD,CACE1C,WAAYwC,EACZzC,SAAU0C,EACVxC,aAAcA,EACdC,SAAUA,EACVC,OAAQA,IAEV,+BACE,6BACE,cAAC,IAAD,CACEkD,GAAI,CACFC,SAAS,GAAD,OAAKJ,EAAL,SACRnC,MAAO,CACL8B,KAAMD,IAJZ,oBAWF,6BACE,cAAC,IAAD,CACES,GAAI,CACFC,SAAS,GAAD,OAAKJ,EAAL,YACRnC,MAAO,CACL8B,KAAMD,IAJZ,0BAYJ,cAAC,IAAD,CACEW,KAAK,wBACLC,OAAQ,SAAApC,GAAK,OAAI,cAAC,EAAD,KAAUA,OAE7B,cAAC,IAAD,CACEmC,KAAK,2BACLC,OAAQ,SAAApC,GAAK,OAAI,cAAC,EAAD,KAAaA,c,GA9ELY,aAqFpBO","file":"static/js/movies-details-view.5f24a500.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posterMovie\":\"MovieDetailsBlock_posterMovie__-t4hp\",\"mainBlock\":\"MovieDetailsBlock_mainBlock__1rcvt\",\"descriptionBlock\":\"MovieDetailsBlock_descriptionBlock__3NEmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CastPhoto\":\"Cast_CastPhoto__1jUkr\",\"castList\":\"Cast_castList__3mPNN\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\r\n\r\nimport styles from './MovieDetailsBlock.module.css';\r\n\r\nconst MovieDetailsBlock = ({\r\n  imageUrl,\r\n  movieTitle,\r\n  vote_average,\r\n  overview,\r\n  genres,\r\n}) => {\r\n  return (\r\n    <div className={styles.mainBlock}>\r\n      <div>\r\n        {' '}\r\n        {imageUrl !== '' && (\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${imageUrl}`}\r\n            alt=\"\"\r\n            className={styles.posterMovie}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={styles.descriptionBlock}>\r\n        <div>\r\n          <h1>{movieTitle}</h1>\r\n          <p>Vote average: {vote_average}</p>\r\n        </div>\r\n        <div>\r\n          <h2>Overview</h2>\r\n          <p>{overview}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Genres: </h3>\r\n          {genres.map(({ id, name }) => (\r\n            <p key={id}>{name}</p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsBlock;\r\n","import React, { Component } from 'react';\r\n\r\nimport moviesApi from '../../services/movies-api';\r\n\r\nimport styles from './Cast.module.css';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    actors: [],\r\n  };\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const responce = await moviesApi.fetchCast(movieId);\r\n\r\n    this.setState({ actors: responce.data.cast });\r\n  }\r\n\r\n  render() {\r\n    const { actors } = this.state;\r\n    return (\r\n      <>\r\n        {actors.length > 0 ? (\r\n          <ul className={styles.castList}>\r\n            {actors.map(({ id, name, profile_path }) => (\r\n              <li key={id}>\r\n                <p>{name}</p>\r\n                {profile_path ? (\r\n                  <img\r\n                    className={styles.CastPhoto}\r\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\r\n                    alt={name}\r\n                  />\r\n                ) : null}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>We don't have cast for this movie.</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import React, { Component } from 'react';\r\n\r\nimport moviesApi from '../../services/movies-api';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const responce = await moviesApi.fetchReviews(movieId);\r\n\r\n    this.setState({ reviews: responce.data.results });\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <>\r\n        {reviews.length > 0 ? (\r\n          <ul>\r\n            {reviews.map(({ id, author, content }) => (\r\n              <li key={id}>\r\n                <h2>Author: {author}</h2>\r\n                <p>{content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>We don't have any reviews for this movie.</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { Component } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport routes from '../routes';\r\n\r\nimport moviesApi from '../services/movies-api';\r\n\r\nimport MovieDetailsBlock from '../Components/MovieDetailsBlock/MovieDetailsBlock';\r\nimport Cast from '../Components/Cast/Cast';\r\nimport Reviews from '../Components/Reviews/Reviews';\r\n\r\nclass MovieDetailsPageView extends Component {\r\n  state = {\r\n    title: null,\r\n    vote_average: null,\r\n    overview: null,\r\n    genres: [],\r\n    id: null,\r\n    poster_path: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchMovieDetails();\r\n  }\r\n\r\n  async fetchMovieDetails() {\r\n    const { movieId } = this.props.match.params;\r\n    const responce = await moviesApi.fetchDetails(movieId);\r\n\r\n    this.setState({ ...responce.data });\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { history, location } = this.props;\r\n    if (location.state && location.state.from) {\r\n      return history.push(location.state.from);\r\n    }\r\n    history.push(routes.movies);\r\n  };\r\n\r\n  render() {\r\n    const { title, vote_average, overview, genres, poster_path } = this.state;\r\n    const { url } = this.props.match;\r\n    const { location } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <button className=\"goBackBtn\" type=\"button\" onClick={this.handleGoBack}>\r\n          Go back\r\n        </button>\r\n        <MovieDetailsBlock\r\n          movieTitle={title}\r\n          imageUrl={poster_path}\r\n          vote_average={vote_average}\r\n          overview={overview}\r\n          genres={genres}\r\n        />\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to={{\r\n                pathname: `${url}/cast`,\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            >\r\n              Cast\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={{\r\n                pathname: `${url}/reviews`,\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            >\r\n              Reviews\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <Route\r\n          path=\"/movies/:movieId/cast\"\r\n          render={props => <Cast {...props} />}\r\n        />\r\n        <Route\r\n          path=\"/movies/:movieId/reviews\"\r\n          render={props => <Reviews {...props} />}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPageView;\r\n"],"sourceRoot":""}